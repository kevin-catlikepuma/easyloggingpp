<!DOCTYPE HTML>
<!-- saved from url=(0063)https://blog.csdn.net/woshichenweixian/article/details/77461352 -->
<!DOCTYPE html PUBLIC "" ""><HTML lang="zh-CN"><HEAD><META content="IE=11.0000" 
http-equiv="X-UA-Compatible">
     
<META charset="UTF-8">     <LINK href="https://blog.csdn.net/woshichenweixian/article/details/77461352" 
rel="canonical">          
<META name="renderer" content="webkit">     
<META name="force-rendering" content="webkit">     
<META http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">     
<META name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no"> 
    
<META name="apple-mobile-web-app-status-bar-style" content="black">     
<META name="referrer" content="always">     
<META name="description" content="&nbsp; &nbsp; &nbsp; &nbsp; 一.&nbsp; &nbsp; 使用开源项目最大的好处就是可以看它的源码来加深你的理解，理解了其实现原理，则使用起来必定更加得心应手。&nbsp; &nbsp; &nbsp; &nbsp;下面几个类是Easylogging中最重要的几个类，弄明白了这几个类就能弄懂各项功能的实现：&nbsp; &nbsp; &nbsp; &nbsp; Loger：调试者&nbsp; &nbsp; &nbsp; &nbsp; RegisteredLoggers：调试者仓库，即多个调试者的集合&nbsp; &nbsp; &nbsp; &nbsp; Writer：调试器&nbsp; &nbsp; &nbsp; ..."> 
    
<META name="keywords" content="">     
<META http-equiv="Cache-Control" content="no-siteapp"><LINK href="#" rel="alternate" 
media="handheld">     
<META name="shenma-site-verification" content="5a59773ab8077d4a62bf469ab966a63b_1497598848"> 
    
<SCRIPT src="Easylogging++源码分析_files/tingyun-rum-blog.js"></SCRIPT>
     <LINK href="https://csdnimg.cn/public/favicon.ico" rel="SHORTCUT ICON">     
<TITLE>Easylogging++源码分析 - CSDN博客</TITLE>             <LINK href="Easylogging++源码分析_files/detail-4170e79ecf.min.css" 
rel="stylesheet">         <LINK href="Easylogging++源码分析_files/skin3-template-9b39979775.min.css" 
rel="stylesheet">     
<SCRIPT type="text/javascript">
        var username = "woshichenweixian";
        var blog_address = "https://blog.csdn.net/woshichenweixian";
        var static_host = "https://csdnimg.cn/release/phoenix/";
        var currentUserName = "";
        var isShowAds = true;
        var isOwner = false;
        var loginUrl = "https://passport.csdn.net/account/login?from=https://blog.csdn.net/woshichenweixian/article/details/77461352"
        var blogUrl = "https://blog.csdn.net/";
        //页面皮肤样式
        var curSkin = "skin3-template";
        // 第四范式所需数据
        var articleTitles = "Easylogging++源码分析";
        var articleID = "77461352";
    </SCRIPT>
     
<SCRIPT type="text/javascript">
        // Traffic Stats of the entire Web site By baidu
        var _hmt = _hmt || [];
        (function() {
            var hm = document.createElement("script");
            hm.src = "https://hm.baidu.com/hm.js?6bcd52f51e9b3dce32bec4a3997715ac";
            var s = document.getElementsByTagName("script")[0];
            s.parentNode.insertBefore(hm, s);
        })();
        // Traffic Stats of the entire Web site By baidu end
    </SCRIPT>
     
<SCRIPT src="Easylogging++源码分析_files/jquery-1.9.1.min.js" type="text/javascript"></SCRIPT>
     
<SCRIPT src="Easylogging++源码分析_files/main-1.0.6.js"></SCRIPT>
     <!-- 新版上报 -->     
<SCRIPT src="Easylogging++源码分析_files/track.js" type="text/javascript"></SCRIPT>
     <!-- 新版上报end -->             <LINK href="Easylogging++源码分析_files/sandalstrap.min.css" 
rel="stylesheet">     
<STYLE>
        .MathJax, .MathJax_Message, .MathJax_Preview{
            display: none
        }
    </STYLE>
 
<META name="GENERATOR" content="MSHTML 11.00.10570.1001"></HEAD> <!-- nodata 为 第四范式接口有问题时样式不变的处理 --> 
<BODY class="nodata"><LINK href="Easylogging++源码分析_files/content_toolbar.css" 
rel="stylesheet">     
<SCRIPT id="toolbar-tpl-scriptId" src="Easylogging++源码分析_files/content_toolbar.js" type="text/javascript" domain="https://blog.csdn.net/"></SCRIPT>
 <LINK href="Easylogging++源码分析_files/blog_code-c3a0c33d5c.css" rel="stylesheet"> 
<LINK href="Easylogging++源码分析_files/paging.css" rel="stylesheet"> 
<SCRIPT src="Easylogging++源码分析_files/mvf_news_feed.js" type="text/javascript"></SCRIPT>
 
<DIV style="display: none;"><IMG onerror='setTimeout(function(){if(!/(csdn.net|iteye.com|baiducontent.com|googleusercontent.com|360webcache.com|sogoucdn.com|bingj.com|baidu.com)$/.test(window.location.hostname)){window.location.href="\x68\x74\x74\x70\x73\x3a\x2f\x2f\x77\x77\x77\x2e\x63\x73\x64\x6e\x2e\x6e\x65\x74"}},3000);' 
src=""> </DIV><LINK href="Easylogging++源码分析_files/chart-3456820cac.css" rel="stylesheet"> 
<SCRIPT src="Easylogging++源码分析_files/ds.js"></SCRIPT>
 
<DIV class="container clearfix" id="mainBox"><!-- <div id="breadcrumbs">
			<span><a href="https://blog.csdn.net/">博客首页</a></span>
			<i>></i>
			<span><a href="https://blog.csdn.net/woshichenweixian">CWX</a></span>
			<i>></i>
			<span>Easylogging++源码分析</span>
		</div> -->
		 
<UL class="recommend-right"></UL><main>
<DIV class="blog-content-box">
<DIV class="article-header-box">
<DIV class="article-header">
<DIV class="article-title-box"><SPAN 
class="article-type type-1 float-left">原</SPAN>				
<H1 class="title-article">Easylogging++源码分析</H1></DIV>
<DIV class="article-info-box">
<DIV class="article-bar-top"><SPAN class="time">2017年08月21日 22:31:12</SPAN>
					 <A class="follow-nickName" href="https://me.csdn.net/woshichenweixian" 
target="_blank">CccWeiXian</A>						 <SPAN class="read-count">阅读数：145</SPAN>
																																	 
<DIV class="tags-box space"><SPAN class="label">个人分类：</SPAN>																 <A 
class="tag-link" href="https://blog.csdn.net/woshichenweixian/article/category/7048426" 
target="_blank">C/C++																<A class="tag-link" href="https://blog.csdn.net/woshichenweixian/article/category/7048453" 
target="_blank">easylogging++																</A>							 </DIV></DIV>
<DIV class="operating"></DIV></DIV></DIV></DIV><ARTICLE>
<DIV class="article_content clearfix csdn-tracking-statistics" id="article_content" 
data-dsm="post" data-mod="popu_307" data-pid="blog">
<DIV 
class="article-copyright">版权声明：本文为博主原创文章，未经博主允许不得转载。					https://blog.csdn.net/woshichenweixian/article/details/77461352				</DIV><LINK 
href="Easylogging++源码分析_files/ck_htmledit_views-e2445db1a8.css" 
rel="stylesheet">						 
<DIV class="htmledit_views">
<P>&nbsp; &nbsp; &nbsp; &nbsp;<SPAN 
style="font-size: 24px;"><STRONG>一.</STRONG></SPAN></P>
<P><SPAN style="font-size: 24px;">&nbsp; &nbsp; </SPAN><SPAN style="font-size: 14px;">使用开源项目最大的好处就是可以看它的源码来加深你的理解，理解了其实现原理，则使用起来必定更加得心应手。</SPAN></P>
<P><SPAN style="font-size: 14px;">&nbsp; &nbsp; &nbsp; 
&nbsp;下面几个类是Easylogging中最重要的几个类，弄明白了这几个类就能弄懂各项功能的实现：</SPAN></P>
<P><SPAN style="font-size: 14px;">&nbsp; &nbsp; &nbsp; &nbsp; 
Loger：调试者</SPAN></P>
<P><SPAN style="font-size: 14px;">&nbsp; &nbsp; &nbsp; &nbsp; 
RegisteredLoggers：调试者仓库，即多个调试者的集合</SPAN></P>
<P><SPAN style="font-size: 14px;">&nbsp; &nbsp; &nbsp; &nbsp; 
Writer：调试器</SPAN></P>
<P><SPAN style="font-size: 14px;">&nbsp; &nbsp; &nbsp; &nbsp; 
Configuration：配置器</SPAN></P>
<P><SPAN style="font-size: 14px;">&nbsp; &nbsp; &nbsp; &nbsp; 
Configurations：配置器仓库，即多个配置器的集合</SPAN></P>
<P><SPAN style="font-size: 14px;"><BR></SPAN></P>
<P><SPAN style="font-size: 14px;">&nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp;调试者，调试器，配置器三者的关系如下：</SPAN></P>
<P><SPAN style="font-size: 14px;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<IMG alt="" 
src="Easylogging++源码分析_files/20170822225647153.png"></SPAN></P>
<P><SPAN style="font-size: 14px;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
当开始一次log输出时，Writer找到一个对应的Loger，该Loger保存了自己的配置信息，根据这些配置信息，Writer决定是否输出该log，或者以什么格式将log输出到哪个文件中。</SPAN></P>
<P><SPAN style="font-size: 14px;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp;上面的流程就是每次log的输出过程。从源码中可以很清晰的看到这个流程，展开宏LINFO：</SPAN></P>
<PRE><CODE class="language-cpp">#define LINFO CINFO("trivial")</CODE></PRE>&nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; <SPAN style="font-size: 14px;">&nbsp; 
"trivial"是Loger的标识符号，表明这条log将使用"trivial"调试器。类似的还有其他的调试器：</SPAN>
<PRE><CODE class="language-cpp">#define BINFO CINFO("business")</CODE></PRE>
<PRE><CODE class="language-cpp">#define SINFO CINFO("security")</CODE></PRE>&nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<SPAN 
style="font-size: 14px;">等等调试器。再继续一层层的展开宏，最后可以发现：</SPAN>
<PRE><CODE class="language-cpp">#define _ELPP_LOG_WRITER(_logger, _level) easyloggingpp::internal::Writer(\
    _logger, easyloggingpp::internal::Aspect::Normal, _level, __func__, __FILE__, __LINE__)</CODE></PRE>&nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<SPAN 
style="font-size: 14px;">实际上是定义了一个Writer匿名对象。所以，每当我们开始一条log的输出时，就会生成一个Writer匿名对象。对于匿名对象，在其定义的地方，一行结束后即是其生命周期的结束，即这时会执行其析构函数。</SPAN>
<P><SPAN style="font-size: 14px;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; </SPAN><SPAN 
style="font-size: 14px;">Writer的构造函数中，会根据loggerId_(即前面说的"trivial")获取到对应的loger：</SPAN></P>
<PRE><CODE class="language-cpp">logger_ = registeredLoggers-&gt;get(loggerId_, false);</CODE></PRE>&nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
style="font-size: 14px;">这里的registeredLoggers就是Loger仓库了，这个仓库是什么时候在哪里建立的？这个会在后面讲。 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</SPAN>
<P><SPAN style="font-size: 14px;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; 
&nbsp;然后在Writer的析构函数中，会进行log的真正处理，调用buildAndWriterLine()函数,这个函数做的事如下：</SPAN></P>
<P><SPAN style="font-size: 14px;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp;(1)先从loger中拿到配置信息：</SPAN></P>
<PRE><CODE class="language-cpp">TypedConfigurations* conf_ = logger_-&gt;typedConfigurations_;</CODE></PRE>&nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<SPAN 
style="font-size: 14px;">(2)根据配置信息，加载log到Writer的成员变量currLine_中，展示一部分代码如下：</SPAN>
<PRE><CODE class="language-cpp"> if (f_ &amp; constants_-&gt;kAppName) {
            v_ = logger_-&gt;applicationName();
            fs_ = constants_-&gt;APP_NAME_FORMAT_SPECIFIER;
            internal::utilities::LogManipulator::updateFormatValue(fs_, v_, currLine_, constants_);
        }
        // Logger ID
        if (f_ &amp; constants_-&gt;kLoggerId) {
            v_ = logger_-&gt;id();
            fs_ = constants_-&gt;LOGGER_ID_FORMAT_SPECIFIER;
            internal::utilities::LogManipulator::updateFormatValue(fs_, v_, currLine_, constants_);
        }</CODE></PRE>
<PRE><CODE class="language-cpp">  // Log message
        if (f_ &amp; constants_-&gt;kLogMessage) {
            fs_ = constants_-&gt;LOG_MESSAGE_FORMAT_SPECIFIER;
            internal::utilities::LogManipulator::updateFormatValue(fs_, logger_-&gt;stream()-&gt;str(), currLine_, constants_);</CODE></PRE>&nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<SPAN 
style="font-size: 14px;">其中，上面的Log 
message即是我们本身要输出的，其保存在logger_的std::stringstream* stream_;中。例如：</SPAN>
<PRE><CODE class="language-cpp">LINFO&lt;&lt;"test!";</CODE></PRE>&nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<SPAN style="font-size: 14px;"> 
&nbsp;即这时我们要输出的test!"信息就保存中stream_成员中。这个过程就是在之前的文章&lt;Easylogging的封装使用&gt;中讲到的，在Writer 
的&lt;&lt;操作符重载函数中，其针对每种数据类型都有对应的重载函数，包括一些第三方库的数据类型，或者自定义的类型，例如下面几个例子：</SPAN>
<PRE><CODE class="language-cpp">  inline Writer&amp; operator&lt;&lt;(const std::string&amp; log_) {
        if (!proceed_) { return *this; }
        _ELPP_STREAM(logger_) &lt;&lt; log_;
        return *this;
    }</CODE></PRE>
<PRE><CODE class="language-cpp">    inline Writer&amp; operator&lt;&lt;(signed short log_) {
        if (!proceed_) { return *this; }
        _ELPP_STREAM(logger_) &lt;&lt; log_;
        return *this;
    }</CODE></PRE>
<PRE><CODE class="language-cpp">    inline Writer&amp; operator&lt;&lt;(const QStringRef&amp; log_) {
        if (!proceed_) { return *this; }
        return operator&lt;&lt;(log_.toString());
    }</CODE></PRE>
<PRE><CODE class="language-cpp">    template &lt;class Class&gt;
    inline Writer&amp; operator&lt;&lt;(const Class&amp; class_) {
        if (!proceed_) { return *this; }
        _ELPP_STREAM(logger_) &lt;&lt; class_;
        return *this;
    }</CODE></PRE>&nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <SPAN style="font-size: 14px;">&nbsp; 
(3)根据配置信息，将currLine_输出到文件或者标志输出中：</SPAN>
<PRE><CODE class="language-cpp"> if (logger_-&gt;stream_) {
            if (logger_-&gt;typedConfigurations_-&gt;toFile(severity_)) {
                safeWriteToFile(severity_, logger_, currLine_);
            }
            if (logger_-&gt;typedConfigurations_-&gt;toStandardOutput(severity_)) {
                std::cout &lt;&lt; currLine_;
            }</CODE></PRE>&nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<SPAN 
style="font-size: 14px;">到这里，一条log就输出完毕。</SPAN><BR><BR>
<P><STRONG><SPAN style="font-size: 24px;">二.</SPAN></STRONG></P>
<P><SPAN style="font-size: 24px;">&nbsp; &nbsp; &nbsp; </SPAN><SPAN style="font-size: 14px;">前面讲到Writer会根据logerId从Loger仓库中拿到一个对应的Loger，那这个Loger仓库从哪来的呢？在&lt;Easylogginggpp介绍和简单使用&gt;:http://blog.csdn.net/woshichenweixian/article/details/77018452 
这篇文章中讲到，要使用Easylogging，必须先调用初始化宏一次：</SPAN></P>
<PRE><CODE class="language-cpp">_INITIALIZE_EASYLOGGINGPP</CODE></PRE>
<P><SPAN style="font-size: 14px;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp;展开该宏：</SPAN></P>
<PRE><CODE class="language-cpp">#define _INITIALIZE_EASYLOGGINGPP                                 \
    namespace easyloggingpp {                                     \
        namespace internal {                                      \
            ScopedPointer&lt;RegisteredLoggers&gt; registeredLoggers(   \
                    new RegisteredLoggers());                     \
        }                                                         \
    }</CODE></PRE><SPAN 
style="font-size: 14px;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp;该宏其实就是在easylogginggpp::internal作用域内定义了一个ScopedPointer&lt;RegisteredLoggers&gt;对象。ScopedPointer是Easylogging内部实现的一个智能指针模板类，类似于C++11的<SPAN 
style="font-size: 14px;">&nbsp; 
shared_ptr。这里创建的智能指针要管理的对象是RegisteredLoggers,所以在这里给智能指针传的参数是new 
一个RegisteredLoggers对象，至此，Loggers仓库创建完成。另外需要说的一点是，这里用智能指针进行仓库管理的好处是，我们只需在刚开始使用Easylogging时进行初始化，而不用在不使用Easylogging时去手动清理。</SPAN></SPAN>
<P><SPAN style="font-size: 14px;"><SPAN style="font-size: 14px;">&nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp;</SPAN></SPAN><SPAN 
style="font-size: 14px;">RegisteredLoggers的构造函数中会创建几个默认的Logger：</SPAN></P>
<PRE><CODE class="language-cpp">registerNew(new Logger("trivial", constants_, conf));
        registerNew(new Logger("business", constants_));
        registerNew(new Logger("security", constants_));</CODE></PRE>
<PRE><CODE class="language-cpp">registerNew(new Logger("performance", constants_, confPerformance));</CODE></PRE>&nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 之前提到的"trivial" Loger就是在这时创建的。
<P><SPAN style="font-size: 14px;"><SPAN style="font-size: 14px;">&nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; 
再来看看RegisterdLoggers是如何管理多个Loger的，这个的实现也很有意思。RegisteredLoggers继承于一个模板类<BR></SPAN></SPAN></P>
<PRE><CODE class="language-cpp">template&lt;class Class, class Predicate&gt;
class Registry {</CODE></PRE>&nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 作者是这样解释Registry模板类的使用的：<BR>
<PRE><CODE class="language-cpp">//! Internal repository base to manage memory on heap. Used internally, you should not use it.</CODE></PRE>&nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
即它是一个基于堆内存管理的内部仓库。模板参数Class是管理的对象的类型，模板参数Predicate是一个函数对象，用来<SPAN style="font-size: 14px;">判断Logger是否符合某个条件</SPAN>。
<P><SPAN style="font-size: 14px;"><SPAN style="font-size: 14px;">&nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; Registry类的数据成员如下：</SPAN></SPAN></P>
<PRE><CODE class="language-cpp">private:
    std::vector&lt;Class*&gt; list_;</CODE></PRE>&nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
即通过std::vector管理了所有对象的指针，每当注册一个新的对象时，就是把该对象的指针推到vector中：
<P><SPAN style="font-size: 14px;"><SPAN 
style="font-size: 14px;"></SPAN></SPAN></P>
<PRE><CODE class="language-cpp">inline void registerNew(Class* c_) {
        list_.push_back(c_);
    }</CODE></PRE>&nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp;从仓库中获取一个特定的Loger时，会遍历整个vector，通过模板参数Predicate这个函数对象去判断是否是要找的那个Logger：
<PRE><CODE class="language-cpp">   template&lt;typename T, typename T2&gt;
    Class* get(const T&amp; t_, const T2&amp; t2_) {
        Iterator iter = std::find_if(list_.begin(), list_.end(), Predicate(t_, t2_));
        if (iter != list_.end() &amp;&amp; *iter != NULL) {
            return *iter;
        }
        return NULL;
    }
</CODE></PRE>&nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;RegisteredLoggers就是通过这个Registry类来管理多个Logger的：
<PRE><CODE class="language-cpp">class RegisteredLoggers : public internal::Registry&lt;Logger, Logger::Predicate&gt;</CODE></PRE>&nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
实际上，Configurations和Configuration之间的关系类似于RegisteredLoggers和Logger的关系，都是仓库管理多个对象，所以Configurations的实现也是继承于Registry的：
<P></P>
<PRE><CODE class="language-cpp">class Configurations : public internal::Registry&lt;internal::Configuration, internal::Configuration::Predicate&gt;</CODE></PRE>
<P><SPAN style="font-size: 24px;"><STRONG>三.</STRONG></SPAN></P>
<P><SPAN style="font-size: 24px;"><STRONG>&nbsp; &nbsp; &nbsp; 
&nbsp;</STRONG></SPAN><SPAN 
style="font-size: 14px;">Easylogging中的几个重要的概念和类的实现都讲了，还有其他的一些细节值得关注，例如：跨平台的实现，线程安全，配置文件的解析等等，有兴趣的话，可以去翻翻源码，对理解这个开源库还是很有帮助的。</SPAN></P>
<P><SPAN style="font-size: 14px;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp;</SPAN></P>
<P><SPAN style="font-size: 14px;"><BR></SPAN></P><BR>
<P></P>
<P><SPAN style="font-size: 14px;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp;<BR><BR><BR></SPAN></P>
<P><SPAN style="font-size: 14px;"><BR></SPAN></P>
<P><SPAN style="font-size: 14px;"><BR></SPAN></P>
<P><SPAN style="font-size: 14px;"><BR></SPAN></P></DIV></DIV>
<DIV class="hide-article-box text-center"><A class="btn" id="btn-readmore" 
data-track-click='{"mod":"popu_376","con":",https://blog.csdn.net/woshichenweixian/article/details/77461352,"}' 
data-track-view='{"mod":"popu_376","con":",https://blog.csdn.net/woshichenweixian/article/details/77461352,"}'>阅读更多</A>
			 <A class="btn" id="btn-lobinreadmore" href="https://passport.csdn.net/account/login?utm_source=csdn_blog_pc_more_login" 
target="_self" data-track-click='{"mod":"popu_557","con":",https://blog.csdn.net/woshichenweixian/article/details/77461352,"}' 
data-track-view='{"mod":"popu_557","con":",https://blog.csdn.net/woshichenweixian/article/details/77461352,"}'>登录后自动展开</A>
		 </DIV></ARTICLE></DIV>
<SCRIPT>
		$(".MathJax").remove();
		if($('div.markdown_views pre.prettyprint code.hljs').length > 0 ){
				$('div.markdown_views')[0].className = 'markdown_views';
		}
</SCRIPT>
 <!-- 博客详情页PC增加广告系统刷量代码 --> 
<DIV id="a52b5334d" style="width: 1px; height: 1px; display: none;">
<SCRIPT id="adJs52b5334"></SCRIPT>
 
<SCRIPT>document.getElementById("adJs52b5334").src = "https://ads.csdn.net/js/opt/52b5334.js?t=" + Math.random();</SCRIPT>
 </DIV>
<SCRIPT>
	(function(){
		var btnReadmore = $("#btn-readmore");
		if(btnReadmore.length>0){
			var winH = $(window).height();
			var articleBox = $("div.article_content");
			var artH = articleBox.height();
			if(artH > winH*2){
				articleBox.css({
					'height':winH*2+'px',
					'overflow':'hidden'
				})
				btnReadmore.click(function(){
					articleBox.removeAttr("style");
					$(this).parent().remove();
				})
			}else{
				btnReadmore.parent().remove();
			}
		}
	})()
</SCRIPT>
         
<DIV id="adt0" style="padding: 20px; overflow: hidden; margin-top: 8px; background-color: rgb(255, 255, 255);" 
data-track-view='{"mod":"popu_625","con": ",https://blog.csdn.net/woshichenweixian/article/details/77461352,from_360"}'></DIV>
<SCRIPT>
                var adWidth = $("div.blog-content-box").outerWidth() - 40;
                NEWS_FEED({
                    w: adWidth,
                    h : 130,
                    showid : "s02a31",
                    placeholderId: "adt0",
                    inject : "define",
                    define : {
                    imagePosition : "left",
                    imageBorderRadius : 0,
                    imageWidth: 231,
                    imageHeight: 130,
                    imageFill : "clip",
                    displayImage : true,
                    displayTitle : true,
                    titleFontSize: 20,
                    titleFontColor: "#333",
                    titleFontFamily : "Microsoft Yahei",
                    titleFontWeight: "bold",
                    titlePaddingTop : 0,
                    titlePaddingRight : 0,
                    titlePaddingBottom : 10,
                    titlePaddingLeft : 16,
                    displayDesc : true,
                    descFontSize: 14,
                    descFontColor: "#6b6b6b",
                    descFontFamily : "Microsoft Yahei",
                    paddingTop : 0,
                    paddingRight : 0,
                    paddingBottom : 0,
                    paddingLeft : 0,
                    backgroundColor: "#fff",
                    hoverColor: "#ca0c16"
                    }
                })
            </SCRIPT>
        <A id="commentBox"></A> 
<DIV class="comment-box">
<DIV class="unlogin-box text-center">想对作者说点什么？		 <!-- $curl 当前地址 -->		 <A class="btn btn-sm btn-red" 
href="https://passport.csdn.net/account/login?from=https://blog.csdn.net/woshichenweixian/article/details/77461352#commentBox">我来说一句</A>
	 </DIV>
<DIV class="comment-list-container"><A id="comments"></A>		 
<DIV class="comment-list-box"></DIV>
<DIV class="pagination-box d-none" id="commentPage"></DIV>
<DIV class="opt-box text-center"><BUTTON class="btn btn-sm btn-link-blue" id="btnMoreComment"></BUTTON>
		 </DIV></DIV></DIV>
<DIV class="recommend-box">
<DIV class="recommend-item-box recommend-box-ident type_blog clearfix" 
data-track-click='{"mod":"popu_387","con":",https://blog.csdn.net/Fish_55_66/article/details/49425949,BlogCommendFromGuangxin_3"}' 
data-track-view='{"mod":"popu_387","con":",https://blog.csdn.net/Fish_55_66/article/details/49425949,BlogCommendFromGuangxin_3"}'><A 
title="日志库<em>EasyLogging++</em>学习系列（3）—— 配置功能" href="https://blog.csdn.net/Fish_55_66/article/details/49425949" 
target="_blank">
<DIV class="content">
<H4 class="text-truncate oneline">日志库<EM>EasyLogging++</EM>学习系列（3）—— 
配置功能				</H4>
<DIV class="info-box d-flex align-content-center">
<P class="avatar"><IMG class="avatar-pic" alt="Fish_55_66" src="Easylogging++源码分析_files/3_fish_55_66.jpg">
							 <SPAN class="namebox"><SPAN class="name">Fish_55_66</SPAN>								 <SPAN 
class="triangle"></SPAN>							 </SPAN>					 </P>
<P class="date-and-readNum"><SPAN class="date hover-show">10-26</SPAN>
						 <SPAN class="read-num hover-hide"><svg xmlns="http://www.w3.org/2000/svg" 
class="icon csdnc-yuedushu" aria-hidden="true"><use xmlns:xlink="http://www.w3.org/1999/xlink" 
xlink:href="#csdnc-yuedushu" />							 </svg>							5878</SPAN>						 </P></DIV>
<P class="content oneline">在前面的文章 《日志库Easylogging++学习系列（1） —— 简要介绍 》中，我们已经初步见识到了 
Easylogging++ 日志库强大的配置功能。那么配置文件中各个字段的意义是什么呢？我们...					</P></DIV></A>	 </DIV>
<DIV class="recommend-item-box recommend-box-ident type_blog clearfix" 
data-track-click='{"mod":"popu_387","con":",https://blog.csdn.net/Fish_55_66/article/details/49587949,BlogCommendESEnWordWeight_0"}' 
data-track-view='{"mod":"popu_387","con":",https://blog.csdn.net/Fish_55_66/article/details/49587949,BlogCommendESEnWordWeight_0"}'><A 
title="日志库<em>EasyLogging++</em>学习系列（9）—— 性能跟踪功能" href="https://blog.csdn.net/Fish_55_66/article/details/49587949" 
target="_blank">
<DIV class="content">
<H4 class="text-truncate oneline">日志库<EM>EasyLogging++</EM>学习系列（9）—— 
性能跟踪功能				</H4>
<DIV class="info-box d-flex align-content-center">
<P class="avatar"><IMG class="avatar-pic" alt="Fish_55_66" src="Easylogging++源码分析_files/3_fish_55_66.jpg">
							 <SPAN class="namebox"><SPAN class="name">Fish_55_66</SPAN>								 <SPAN 
class="triangle"></SPAN>							 </SPAN>					 </P>
<P class="date-and-readNum"><SPAN class="date hover-show">11-02</SPAN>
						 <SPAN class="read-num hover-hide"><svg xmlns="http://www.w3.org/2000/svg" 
class="icon csdnc-yuedushu" aria-hidden="true"><use xmlns:xlink="http://www.w3.org/1999/xlink" 
xlink:href="#csdnc-yuedushu" />							 </svg>							1645</SPAN>						 </P></DIV>
<P class="content oneline">性能跟踪是 Easylogging++ 
其中一个非常显著的功能，而且使用起来也十分简单。如果在Windows平台下使用性能跟踪的话，其原理是基于 Windows 
API函数&nbsp;GetSystemTime...					</P></DIV></A>	 </DIV>
<DIV class="recommend-item-box recommend-ad-box clearfix">
<SCRIPT src="Easylogging++源码分析_files/pc3553.js" type="text/javascript"></SCRIPT>
				 </DIV>
<DIV class="recommend-item-box recommend-box-ident type_blog clearfix" 
data-track-click='{"mod":"popu_387","con":",https://blog.csdn.net/phil_jing/article/details/52789655,BlogCommendFromGuangxin_1"}' 
data-track-view='{"mod":"popu_387","con":",https://blog.csdn.net/phil_jing/article/details/52789655,BlogCommendFromGuangxin_1"}'><A 
title="为什么日志器(logger)要声明为static final的" href="https://blog.csdn.net/phil_jing/article/details/52789655" 
target="_blank">
<DIV class="content">
<H4 class="text-truncate oneline">为什么日志器(logger)要声明为static final的				</H4>
<DIV class="info-box d-flex align-content-center">
<P class="avatar"><IMG class="avatar-pic" alt="phil_jing" src="Easylogging++源码分析_files/3_phil_jing.jpg">
							 <SPAN class="namebox"><SPAN class="name">phil_jing</SPAN>								 <SPAN 
class="triangle"></SPAN>							 </SPAN>					 </P>
<P class="date-and-readNum"><SPAN class="date hover-show">10-11</SPAN>
						 <SPAN class="read-num hover-hide"><svg xmlns="http://www.w3.org/2000/svg" 
class="icon csdnc-yuedushu" aria-hidden="true"><use xmlns:xlink="http://www.w3.org/1999/xlink" 
xlink:href="#csdnc-yuedushu" />							 </svg>							5254</SPAN>						 </P></DIV>
<P class="content oneline">
							(1)出于资源利用的考虑，Logger的构造方法参数是Class，决定了Logger是根据类的结构来进行区分日志，所以一个类只要一个Logger就可以了，故static
 (2)final表示一种编程...					</P></DIV></A>	 </DIV>
<DIV class="recommend-item-box recommend-box-ident type_blog clearfix" 
data-track-click='{"mod":"popu_387","con":",https://blog.csdn.net/dfadsg/article/details/57415549,BlogCommendFromGuangxin_2"}' 
data-track-view='{"mod":"popu_387","con":",https://blog.csdn.net/dfadsg/article/details/57415549,BlogCommendFromGuangxin_2"}'><A 
title="logger为啥要static final" href="https://blog.csdn.net/dfadsg/article/details/57415549" 
target="_blank">
<DIV class="content">
<H4 class="text-truncate oneline">logger为啥要static final				</H4>
<DIV class="info-box d-flex align-content-center">
<P class="avatar"><IMG class="avatar-pic" alt="dfadsg" src="Easylogging++源码分析_files/3_dfadsg.gif">
							 <SPAN class="namebox"><SPAN class="name">dfadsg</SPAN>								 <SPAN 
class="triangle"></SPAN>							 </SPAN>					 </P>
<P class="date-and-readNum"><SPAN class="date hover-show">02-26</SPAN>
						 <SPAN class="read-num hover-hide"><svg xmlns="http://www.w3.org/2000/svg" 
class="icon csdnc-yuedushu" aria-hidden="true"><use xmlns:xlink="http://www.w3.org/1999/xlink" 
xlink:href="#csdnc-yuedushu" />							 </svg>							1577</SPAN>						 </P></DIV>
<P class="content oneline">找到一篇blog如是说： 原文链接&nbsp;
[url]http://www.nofluffjuststuff.com/blog/scott_leberknight/2007/03/loggerisnot...					</P></DIV></A>
	 </DIV>
<DIV class="recommend-item-box recommend-box-ident type_blog clearfix" 
data-track-click='{"mod":"popu_387","con":",https://blog.csdn.net/SakuraInLuoJia/article/details/53537384,BlogCommendFromGuangxin_4"}' 
data-track-view='{"mod":"popu_387","con":",https://blog.csdn.net/SakuraInLuoJia/article/details/53537384,BlogCommendFromGuangxin_4"}'><A 
title="Log4j日志实例的继承与覆盖" href="https://blog.csdn.net/SakuraInLuoJia/article/details/53537384" 
target="_blank">
<DIV class="content">
<H4 class="text-truncate oneline">						Log4j日志实例的继承与覆盖				</H4>
<DIV class="info-box d-flex align-content-center">
<P class="avatar"><IMG class="avatar-pic" alt="SakuraInLuoJia" src="Easylogging++源码分析_files/3_sakurainluojia.jpg">
							 <SPAN class="namebox"><SPAN class="name">SakuraInLuoJia</SPAN>
								 <SPAN class="triangle"></SPAN>							 </SPAN>					 </P>
<P class="date-and-readNum"><SPAN class="date hover-show">12-09</SPAN>
						 <SPAN class="read-num hover-hide"><svg xmlns="http://www.w3.org/2000/svg" 
class="icon csdnc-yuedushu" aria-hidden="true"><use xmlns:xlink="http://www.w3.org/1999/xlink" 
xlink:href="#csdnc-yuedushu" />							 </svg>							2541</SPAN>						 </P></DIV>
<P class="content oneline">							log4j日志输出的继承与覆盖					</P></DIV></A>	 </DIV>
<DIV class="recommend-item-box recommend-box-ident type_blog clearfix" 
data-track-click='{"mod":"popu_387","con":",https://blog.csdn.net/u011794238/article/details/50719775,BlogCommendFromGuangxin_5"}' 
data-track-view='{"mod":"popu_387","con":",https://blog.csdn.net/u011794238/article/details/50719775,BlogCommendFromGuangxin_5"}'><A 
title="Log4j扩展使用--日志记录器Logger" href="https://blog.csdn.net/u011794238/article/details/50719775" 
target="_blank">
<DIV class="content">
<H4 class="text-truncate oneline">Log4j扩展使用--日志记录器Logger				</H4>
<DIV class="info-box d-flex align-content-center">
<P class="avatar"><IMG class="avatar-pic" alt="u011794238" src="Easylogging++源码分析_files/3_u011794238.jpg">
							 <SPAN class="namebox"><SPAN class="name">u011794238</SPAN>								 <SPAN 
class="triangle"></SPAN>							 </SPAN>					 </P>
<P class="date-and-readNum"><SPAN class="date hover-show">02-23</SPAN>
						 <SPAN class="read-num hover-hide"><svg xmlns="http://www.w3.org/2000/svg" 
class="icon csdnc-yuedushu" aria-hidden="true"><use xmlns:xlink="http://www.w3.org/1999/xlink" 
xlink:href="#csdnc-yuedushu" />							 </svg>							5783</SPAN>						 </P></DIV>
<P class="content oneline">							OK，现在我们认真的研究下Logger的配置，进行相关配置扩展。 
Log4j有三个主要的组件：Loggers(记录器)，Appenders(输出源)和Layouts(布局)。其中，Logger负责记...					</P></DIV></A>
	 </DIV>
<DIV class="recommend-item-box recommend-ad-box" id="a_d_feed_0"></DIV>
<SCRIPT>
				var width = $("div.recommend-box").outerWidth() - 48;
				NEWS_FEED({
					w: width,
					h: 60,
					showid: 'Afihld',
					placeholderId: 'a_d_feed_0',
					inject: 'define',
					define: {
						imagePosition: 'left',
						imageBorderRadius: 0,
						imageWidth: 90,
						imageHeight: 60,
						imageFill: 'clip',
						displayImage: true,
						displayTitle: true,
						titleFontSize: 20,
						titleFontColor: '#333',
						titleFontFamily: 'Microsoft Yahei',
						titleFontWeight: 'bold',
						titlePaddingTop: 0,
						titlePaddingRight: 0,
						titlePaddingBottom: 10,
						titlePaddingLeft: 8,
						displayDesc: true,
						descFontSize: 14,
						descPaddingLeft: 14,
						descFontColor: '#6b6b6b',
						descFontFamily: 'Microsoft Yahei',
						paddingTop: 0,
						paddingRight: 0,
						paddingBottom: 0,
						paddingLeft: 0,
						backgroundColor: '#fff',
						hoverColor: '#ca0c16'
					}
				})
			</SCRIPT>
						 
<DIV class="recommend-item-box recommend-box-ident type_blog clearfix" 
data-track-click='{"mod":"popu_387","con":",https://blog.csdn.net/lengyuezuixue/article/details/79257473,BlogCommendFromQuerySearch_6"}' 
data-track-view='{"mod":"popu_387","con":",https://blog.csdn.net/lengyuezuixue/article/details/79257473,BlogCommendFromQuerySearch_6"}'><A 
title="<em>Easylogging++</em> Verbose日志详解" href="https://blog.csdn.net/lengyuezuixue/article/details/79257473" 
target="_blank">
<DIV class="content">
<H4 class="text-truncate oneline"><EM>Easylogging++</EM> Verbose日志详解				</H4>
<DIV class="info-box d-flex align-content-center">
<P class="avatar"><IMG class="avatar-pic" alt="lengyuezuixue" src="Easylogging++源码分析_files/3_lengyuezuixue.jpg">
							 <SPAN class="namebox"><SPAN class="name">lengyuezuixue</SPAN>
								 <SPAN class="triangle"></SPAN>							 </SPAN>					 </P>
<P class="date-and-readNum"><SPAN class="date hover-show">02-05</SPAN>
						 <SPAN class="read-num hover-hide"><svg xmlns="http://www.w3.org/2000/svg" 
class="icon csdnc-yuedushu" aria-hidden="true"><use xmlns:xlink="http://www.w3.org/1999/xlink" 
xlink:href="#csdnc-yuedushu" />							 </svg>							125</SPAN>						 </P></DIV>
<P class="content oneline">
							Verbose日志不适用与于划分级别的日志记录，意思就是说在设置了标记：LoggingFlag::HierarchicalLoggin的日志记录中，即使阀值设置大于Verbose级别，甚至是设置成Un...					</P></DIV></A>
	 </DIV>
<DIV class="recommend-item-box recommend-box-ident type_blog clearfix" 
data-track-click='{"mod":"popu_387","con":",https://blog.csdn.net/Fish_55_66/article/details/49451321,BlogCommendFromQuerySearch_7"}' 
data-track-view='{"mod":"popu_387","con":",https://blog.csdn.net/Fish_55_66/article/details/49451321,BlogCommendFromQuerySearch_7"}'><A 
title="日志库<em>EasyLogging++</em>学习系列（5）—— 辅助配置功能" href="https://blog.csdn.net/Fish_55_66/article/details/49451321" 
target="_blank">
<DIV class="content">
<H4 class="text-truncate oneline">日志库<EM>EasyLogging++</EM>学习系列（5）—— 
辅助配置功能				</H4>
<DIV class="info-box d-flex align-content-center">
<P class="avatar"><IMG class="avatar-pic" alt="Fish_55_66" src="Easylogging++源码分析_files/3_fish_55_66.jpg">
							 <SPAN class="namebox"><SPAN class="name">Fish_55_66</SPAN>								 <SPAN 
class="triangle"></SPAN>							 </SPAN>					 </P>
<P class="date-and-readNum"><SPAN class="date hover-show">10-27</SPAN>
						 <SPAN class="read-num hover-hide"><svg xmlns="http://www.w3.org/2000/svg" 
class="icon csdnc-yuedushu" aria-hidden="true"><use xmlns:xlink="http://www.w3.org/1999/xlink" 
xlink:href="#csdnc-yuedushu" />							 </svg>							4149</SPAN>						 </P></DIV>
<P class="content oneline">正如前面《日志库EasyLogging++学习系列（3）—— 
配置功能》文中最后提到的，在某些应用场景下，我们还需要通过其他的一些配置手段来辅助我们完成某些特殊功能，这些辅助配置手段包括设置命令行参数...					</P></DIV></A>
	 </DIV>
<DIV class="recommend-item-box recommend-box-ident type_blog clearfix" 
data-track-click='{"mod":"popu_387","con":",https://blog.csdn.net/i_likechard/article/details/79220472,BlogCommendFromQuerySearch_8"}' 
data-track-view='{"mod":"popu_387","con":",https://blog.csdn.net/i_likechard/article/details/79220472,BlogCommendFromQuerySearch_8"}'><A 
title="日志库 <em>EasyLogging++</em>的快速上手" href="https://blog.csdn.net/i_likechard/article/details/79220472" 
target="_blank">
<DIV class="content">
<H4 class="text-truncate oneline">日志库 <EM>EasyLogging++</EM>的快速上手				</H4>
<DIV class="info-box d-flex align-content-center">
<P class="avatar"><IMG class="avatar-pic" alt="i_likechard" src="Easylogging++源码分析_files/3_i_likechard.jpg">
							 <SPAN class="namebox"><SPAN class="name">i_likechard</SPAN>
								 <SPAN class="triangle"></SPAN>							 </SPAN>					 </P>
<P class="date-and-readNum"><SPAN class="date hover-show">02-08</SPAN>
						 <SPAN class="read-num hover-hide"><svg xmlns="http://www.w3.org/2000/svg" 
class="icon csdnc-yuedushu" aria-hidden="true"><use xmlns:xlink="http://www.w3.org/1999/xlink" 
xlink:href="#csdnc-yuedushu" />							 </svg>							277</SPAN>						 </P></DIV>
<P class="content oneline">							&nbsp;环境：win7 64bit &nbsp;vs2013对话框 语言：c++ 
相关：easylogging++
 easylogging++下载地址：https://github.com/muflihun/e...					</P></DIV></A>	 </DIV>
<DIV class="recommend-item-box recommend-box-ident type_blog clearfix" 
data-track-click='{"mod":"popu_387","con":",https://blog.csdn.net/Fish_55_66/article/details/49427295,BlogCommendFromQuerySearch_9"}' 
data-track-view='{"mod":"popu_387","con":",https://blog.csdn.net/Fish_55_66/article/details/49427295,BlogCommendFromQuerySearch_9"}'><A 
title="日志库<em>EasyLogging++</em>学习系列（4）—— 格式说明符" href="https://blog.csdn.net/Fish_55_66/article/details/49427295" 
target="_blank">
<DIV class="content">
<H4 class="text-truncate oneline">日志库<EM>EasyLogging++</EM>学习系列（4）—— 
格式说明符				</H4>
<DIV class="info-box d-flex align-content-center">
<P class="avatar"><IMG class="avatar-pic" alt="Fish_55_66" src="Easylogging++源码分析_files/3_fish_55_66.jpg">
							 <SPAN class="namebox"><SPAN class="name">Fish_55_66</SPAN>								 <SPAN 
class="triangle"></SPAN>							 </SPAN>					 </P>
<P class="date-and-readNum"><SPAN class="date hover-show">10-26</SPAN>
						 <SPAN class="read-num hover-hide"><svg xmlns="http://www.w3.org/2000/svg" 
class="icon csdnc-yuedushu" aria-hidden="true"><use xmlns:xlink="http://www.w3.org/1999/xlink" 
xlink:href="#csdnc-yuedushu" />							 </svg>							2471</SPAN>						 </P></DIV>
<P class="content oneline">上一篇文章中，主要记录了如何使用 Easylogging++ 
的配置功能，有些细心的小伙伴可能已经发现遗漏了些什么，请看下面两句摘自 my_log.conf 配置文件的语句： FORMAT      
...					</P></DIV></A>	 </DIV>
<DIV class="recommend-loading-box"><IMG src="Easylogging++源码分析_files/feedLoading.gif"> 
            </DIV>
<DIV class="recommend-end-box">
<P class="text-center">没有更多推荐了，<A class="c-blue c-blue-hover c-blue-focus" href="https://blog.csdn.net/">返回首页</A></P></DIV></DIV></main><ASIDE>
<DIV class="aside-box" id="asideProfile">
<H3 class="aside-title">个人资料</H3>
<DIV class="profile-intro d-flex">
<DIV class="avatar-box d-flex justify-content-center flex-column"><A href="https://blog.csdn.net/woshichenweixian"><IMG 
class="avatar_pic" src="Easylogging++源码分析_files/3_woshichenweixian.jpg"></A>     
    </DIV>
<DIV class="user-info d-flex justify-content-center flex-column">
<P class="name csdn-tracking-statistics tracking-click" data-mod="popu_379"><A 
id="uid" href="https://blog.csdn.net/woshichenweixian" 
target="_blank">CccWeiXian</A>             </P></DIV>
<DIV class="opt-box d-flex justify-content-center flex-column"><SPAN class="csdn-tracking-statistics tracking-click" 
data-mod="popu_379"><A class="btn btn-sm btn-red-hollow" href="https://passport.csdn.net/account/login?from=https://blog.csdn.net/woshichenweixian/article/details/77461352" 
target="_self">关注</A>                             </SPAN>                     
</DIV></DIV>
<DIV class="data-info d-flex item-tiling">
<DL title="13" class="text-center">
  <DT><A href="https://blog.csdn.net/woshichenweixian?t=1">原创</A></DT>
  <DD><A href="https://blog.csdn.net/woshichenweixian?t=1"><SPAN 
  class="count">13</SPAN></A></DD></DL>
<DL title="1" class="text-center">
  <DT>粉丝</DT>
  <DD><SPAN class="count" id="fan">1</SPAN></DD></DL>
<DL title="0" class="text-center">
  <DT>喜欢</DT>
  <DD><SPAN class="count">0</SPAN></DD></DL>
<DL title="2" class="text-center">
  <DT>评论</DT>
  <DD><SPAN class="count">2</SPAN></DD></DL></DIV>
<DIV class="grade-box clearfix">
<DL>
  <DT>等级：</DT>             
  <DD><A title="2级,点击查看等级说明" href="https://blog.csdn.net/home/help.html#level" 
  target="_blank"><svg xmlns="http://www.w3.org/2000/svg" 
  class="icon icon-level" aria-hidden="true"><use xmlns:xlink="http://www.w3.org/1999/xlink" 
  xlink:href="#csdnc-bloglevel-2" />                     </svg>                 
  </A>             </DD>         </DL>
<DL>
  <DT>访问：</DT>             
  <DD title="1772">1772            </DD>         </DL>
<DL>
  <DT>积分：</DT>             
  <DD title="150">150            </DD>         </DL>
<DL title="1152869">
  <DT>排名：</DT>             
  <DD>115万+</DD>         </DL></DIV>
<DIV class="badge-box d-flex"><SPAN>勋章：</SPAN>                         <A title="持之以恒" 
class="icon-badge"><svg xmlns="http://www.w3.org/2000/svg" class="icon" 
aria-hidden="true"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="#csdnc-m-lasting" 
/>             </svg>             
<DIV class="icon-arrow"></DIV>
<DIV class="grade-detail-box item2">
<DIV class="pos-box">
<DIV class="left-box d-flex justify-content-center align-items-center flex-column"><svg 
xmlns="http://www.w3.org/2000/svg" class="icon" aria-hidden="true"><use 
xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="#csdnc-m-lasting" />      
                   </svg>                         
<P>持之以恒</P></DIV>
<DIV class="right-box d-flex justify-content-center align-items-center">         
               
授予每个自然月内发布4篇或4篇以上原创或翻译IT博文的用户。不积跬步无以至千里，不积小流无以成江海，程序人生的精彩需要坚持不懈地积累！              
       </DIV></DIV></DIV></A></DIV></DIV>
<DIV class="csdn-tracking-statistics mb8 box-shadow" style="height: 250px;" 
data-mod="popu_4" data-pid="blog">
<DIV class="aside-content text-center" id="cpro_u2734133"><!-- 广告位：PC-博客内页-百度联盟-300x250 -->
<SCRIPT src="Easylogging++源码分析_files/ymebi.js" type="text/javascript"></SCRIPT>
    </DIV></DIV>
<DIV class="aside-box" id="asideNewArticle">
<H3 class="aside-title">最新文章</H3>
<DIV class="aside-content">
<UL class="inf_list clearfix csdn-tracking-statistics tracking-click" data-mod="popu_382">
  <LI class="clearfix"><A href="https://blog.csdn.net/woshichenweixian/article/details/79688925" 
  target="_blank">一种数据对象管理方式：可扩展对象</A></LI>
  <LI class="clearfix"><A href="https://blog.csdn.net/woshichenweixian/article/details/79672727" 
  target="_blank">有限状态机FSM</A></LI>
  <LI class="clearfix"><A href="https://blog.csdn.net/woshichenweixian/article/details/78681056" 
  target="_blank">new,operator new,placement new</A></LI>
  <LI class="clearfix"><A href="https://blog.csdn.net/woshichenweixian/article/details/78536478" 
  target="_blank">动态内存，智能指针</A></LI>
  <LI class="clearfix"><A href="https://blog.csdn.net/woshichenweixian/article/details/78536305" 
  target="_blank">什么是POD数据类型？</A></LI></UL></DIV></DIV>
<DIV class="aside-box" id="asideCategory">
<H3 class="aside-title">个人分类</H3>
<DIV class="aside-content">
<UL>
  <LI><A class="clearfix" href="https://blog.csdn.net/woshichenweixian/article/category/7048426"><SPAN 
  class="title oneline">C/C++</SPAN>                     <SPAN class="count float-right">9篇</SPAN> 
                  </A></LI>
  <LI><A class="clearfix" href="https://blog.csdn.net/woshichenweixian/article/category/7048428"><SPAN 
  class="title oneline">windows</SPAN>                     <SPAN class="count float-right">3篇</SPAN> 
                  </A></LI>
  <LI><A class="clearfix" href="https://blog.csdn.net/woshichenweixian/article/category/7048453"><SPAN 
  class="title oneline">easylogging++</SPAN>                     <SPAN class="count float-right">4篇</SPAN> 
                  </A></LI>
  <LI><A class="clearfix" href="https://blog.csdn.net/woshichenweixian/article/category/7138719"><SPAN 
  class="title oneline">转载</SPAN>                     <SPAN class="count float-right">3篇</SPAN> 
                  </A></LI>
  <LI><A class="clearfix" href="https://blog.csdn.net/woshichenweixian/article/category/7536448"><SPAN 
  class="title oneline">工具代码</SPAN>                     <SPAN class="count float-right">2篇</SPAN> 
                  </A></LI></UL></DIV></DIV>
<DIV class="aside-box" id="asideArchive">
<H3 class="aside-title">归档</H3>
<DIV class="aside-content">
<UL class="archive-list"><!--归档统计-->             
  <LI><A 
  href="https://blog.csdn.net/woshichenweixian/article/month/2018/03">2018年3月    
                  <SPAN class="count float-right">3篇</SPAN>                 
  </A></LI><!--归档统计-->             
  <LI><A 
  href="https://blog.csdn.net/woshichenweixian/article/month/2017/12">2017年12月   
                   <SPAN class="count float-right">1篇</SPAN>                 
  </A></LI><!--归档统计-->             
  <LI><A 
  href="https://blog.csdn.net/woshichenweixian/article/month/2017/11">2017年11月   
                   <SPAN class="count float-right">3篇</SPAN>                 
  </A></LI><!--归档统计-->             
  <LI><A 
  href="https://blog.csdn.net/woshichenweixian/article/month/2017/08">2017年8月    
                  <SPAN class="count float-right">7篇</SPAN>                 
  </A></LI><!--归档统计-->             
  <LI><A 
  href="https://blog.csdn.net/woshichenweixian/article/month/2017/07">2017年7月    
                  <SPAN class="count float-right">2篇</SPAN>                 
  </A></LI></UL></DIV></DIV>
<DIV class="aside-box" id="asideHotArticle">
<H3 class="aside-title">热门文章</H3>
<DIV class="aside-content">
<UL class="hotArticle-list csdn-tracking-statistics tracking-click" data-mod="popu_521">
  <LI><A 
  href="https://blog.csdn.net/woshichenweixian/article/details/76651659">windows核心编程之DLL注入例子分析</A>
  <P class="read">阅读量：<SPAN>325</SPAN></P></LI>
  <LI><A 
  href="https://blog.csdn.net/woshichenweixian/article/details/77018452">Easylogging介绍和简单使用</A>
  <P class="read">阅读量：<SPAN>238</SPAN></P></LI>
  <LI><A 
  href="https://blog.csdn.net/woshichenweixian/article/details/77461352">Easylogging++源码分析</A>
  <P class="read">阅读量：<SPAN>143</SPAN></P></LI>
  <LI><A 
  href="https://blog.csdn.net/woshichenweixian/article/details/77278488">Easylogging的封装使用一</A>
  <P class="read">阅读量：<SPAN>135</SPAN></P></LI>
  <LI><A 
  href="https://blog.csdn.net/woshichenweixian/article/details/76167605">windows核心编程之DLL注入</A>
  <P class="read">阅读量：<SPAN>108</SPAN></P></LI></UL></DIV></DIV>
<DIV class="aside-box" id="asideNewComments">
<H3 class="aside-title">最新评论</H3>
<DIV class="aside-content">
<UL class="newcomment-list">
  <LI><A class="title text-truncate" href="https://blog.csdn.net/woshichenweixian/article/details/77413021#comments" 
  target="_blank">Easylogging的封装使用二</A>                 
  <P class="comment"><A class="user-name" href="https://my.csdn.net/qingtongjian" 
  target="_blank">qingtongjian</A>：能发一下源码吗？最近也在了解和学习easylogging++，谢谢！644127922@qq.com 
                 </P></LI>
  <LI><A class="title text-truncate" href="https://blog.csdn.net/woshichenweixian/article/details/77413021#comments" 
  target="_blank">Easylogging的封装使用二</A>                 
  <P class="comment"><A class="user-name" href="https://my.csdn.net/qingtongjian" 
  target="_blank">qingtongjian</A>：能发一下代码吗？最近在学习easylogging++，谢谢！dingzhouta1987@163.... 
                 </P></LI></UL></DIV></DIV>
<DIV id="asideFooter">
<DIV class="aside-box">
<SCRIPT src="Easylogging++源码分析_files/yn6yz.js" type="text/javascript"></SCRIPT>
					 </DIV>
<DIV class="aside-box">
<DIV class="persion_article"></DIV></DIV></DIV></ASIDE>
<SCRIPT src="Easylogging++源码分析_files/publib_footer-1.0.3.js" type="text/javascript" data-isfootertrack="false"></SCRIPT>
 
<SCRIPT>
	$("a.flexible-btn").click(function(){
		$(this).parents('div.aside-box').removeClass('flexible-box');
		$(this).remove();
	})
</SCRIPT>
 </DIV>
<DIV class="mask-dark"></DIV>
<DIV class="pulllog-box" style="display: block;">
<DIV class="pulllog clearfix"><SPAN class="text float-left"><!-- 广告位：PC-博客内页底通 文字链位置 -->
										 
<SCRIPT>
			var mediav_ad_pub = 'cXt9eo_2313086';
			var mediav_ad_width = '500';
			var mediav_ad_height = '36';
			</SCRIPT>
			 
<SCRIPT language="javascript" src="Easylogging++源码分析_files/mvf_g2.js" type="text/javascript" charset="utf-8"></SCRIPT>
							 </SPAN>		 
<DIV class="pulllog-btn float-right clearfix"><BUTTON class="pulllog-login float-left csdn-tracking-statistics tracking-click" 
data-mod="popu_557"><A href="https://passport.csdn.net/account/login?utm_source=csdn_blog_pc_login" 
target="_self">登录</A></BUTTON>             
<DIV class="pulllog-sigin float-left csdn-tracking-statistics tracking-click" 
data-mod="popu_558"><A href="https://passport.csdn.net/account/mobileregister" 
target="_blank">注册</A></DIV><BUTTON class="btn-close"><svg xmlns="http://www.w3.org/2000/svg" 
class="icon" aria-hidden="true"><use xmlns:xlink="http://www.w3.org/1999/xlink" 
xlink:href="#csdnc-times" />                 </svg>             </BUTTON>
		 </DIV></DIV></DIV>
<DIV id="loginWrap" style="display: none;"></DIV>
<DIV class="tool-box">
<UL class="meau-list">
  <LI class="btn-like-box "><BUTTON title="点赞" class=" low-height hover-box btn-like "><svg 
  xmlns="http://www.w3.org/2000/svg" class="icon active hover-hide" 
  aria-hidden="true"><use xmlns:xlink="http://www.w3.org/1999/xlink" 
  xlink:href="#csdnc-thumbsup-ok" />				 </svg>				 <svg xmlns="http://www.w3.org/2000/svg" 
  class="icon no-active hover-hide" aria-hidden="true"><use xmlns:xlink="http://www.w3.org/1999/xlink" 
  xlink:href="#csdnc-thumbsup" />				 </svg>				 <SPAN class="hover-show text-box text"><SPAN 
  class="no-active">点赞</SPAN>					 <SPAN class="active">取消点赞</SPAN>				 </SPAN>
  				 
  <P>0</P></BUTTON>		 </LI>
  <LI><A title="写评论" class="btn-comments low-height hover-box" href="https://blog.csdn.net/woshichenweixian/article/details/77461352#commentBox"><svg 
  xmlns="http://www.w3.org/2000/svg" class="icon hover-hide" 
  aria-hidden="true"><use xmlns:xlink="http://www.w3.org/1999/xlink" 
  xlink:href="#csdnc-comments" />				 </svg>				 <SPAN 
  class="hover-show text">评论</SPAN>				 
  <P></P></A></LI>
  <LI class="toc-container-box" id="liTocBox"><BUTTON title="目录" class="btn-toc low-height hover-box"><svg 
  xmlns="http://www.w3.org/2000/svg" class="icon hover-hide" 
  aria-hidden="true"><use xmlns:xlink="http://www.w3.org/1999/xlink" 
  xlink:href="#csdnc-contents" />				 </svg>				 <SPAN 
  class="hover-show text">目录</SPAN>			 </BUTTON>			 
  <DIV class="toc-container">
  <DIV class="pos-box">
  <DIV class="icon-arrow"></DIV>
  <DIV class="scroll-box">
  <DIV class="toc-box"></DIV></DIV></DIV>
  <DIV class="opt-box"><BUTTON title="向上" class="btn-opt prev nomore"><svg 
  xmlns="http://www.w3.org/2000/svg" class="icon" aria-hidden="true"><use 
  xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="#csdnc-chevronup" />
  						 </svg>					 </BUTTON>					 <BUTTON class="btn-opt next"><svg xmlns="http://www.w3.org/2000/svg" 
  class="icon" aria-hidden="true"><use 
  xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="#csdnc-chevrondown" />
  						 </svg>					 </BUTTON>				 </DIV></DIV></LI>
  <LI><BUTTON title="收藏" class="btn-bookmark low-height hover-box"><svg xmlns="http://www.w3.org/2000/svg" 
  class="icon active hover-hide" aria-hidden="true"><use xmlns:xlink="http://www.w3.org/1999/xlink" 
  xlink:href="#csdnc-bookmark-ok" />				 </svg>				 <svg xmlns="http://www.w3.org/2000/svg" 
  class="icon no-active hover-hide" aria-hidden="true"><use xmlns:xlink="http://www.w3.org/1999/xlink" 
  xlink:href="#csdnc-bookmark" />				 </svg>					 <SPAN 
  class="hover-show text">收藏</SPAN>				 <!-- <span class="hover-show text-box text">
					<span class="no-active">收藏</span>
					<span class="active">取消收藏</span>
				</span> -->
  			 </BUTTON>		 </LI>
  <LI class="bdsharebuttonbox"><BUTTON 
  class="btn-comments low-height hover-box"><A title="手机看" class="bds_weixin clear-share-style" 
  href="https://blog.csdn.net/woshichenweixian/article/details/77461352#" 
  data-cmd="weixin"></A>				 <svg xmlns="http://www.w3.org/2000/svg" class="icon hover-hide" 
  aria-hidden="true"><use xmlns:xlink="http://www.w3.org/1999/xlink" 
  xlink:href="#csdnc-wechat" />				 </svg>				 <SPAN class="hover-show text text3">手机看
  				 </SPAN>			 </BUTTON>		 </LI>
  <LI class="widescreen-hide"><A title="Easylogging的封装使用二" class="btn-comments low-height hover-box" 
  href="https://blog.csdn.net/woshichenweixian/article/details/77413021"><svg 
  xmlns="http://www.w3.org/2000/svg" class="icon hover-hide" 
  aria-hidden="true"><use xmlns:xlink="http://www.w3.org/1999/xlink" 
  xlink:href="#csdnc-shangyiye" />					 </svg>					 <SPAN class="hover-show text text3">上一篇</SPAN>
  				 </A></LI>
  <LI class="widescreen-hide"><A title="Windows的消息队列与消息循环" class="btn-comments hover-box low-height" 
  href="https://blog.csdn.net/woshichenweixian/article/details/77726963"><svg 
  xmlns="http://www.w3.org/2000/svg" class="icon hover-hide" 
  aria-hidden="true"><use xmlns:xlink="http://www.w3.org/1999/xlink" 
  xlink:href="#csdnc-xiayiye" />				 </svg>				 <SPAN class="hover-show text text3">下一篇</SPAN>
  			 </A></LI>
  <LI class="bdsharebuttonbox _360_interactive" style="margin-top: 8px;">
<SCRIPT src="Easylogging++源码分析_files/interactive_plugin.js" type="text/javascript"></SCRIPT>
   			
<STYLE>
				#_360_interactive > *{
					 margin-left: -8px;
				}
			</STYLE>
  			 
  <DIV id="_360_interactive">
<SCRIPT> INTERACTIVE_PLUGIN.render({ showid : 'N0ufqn', w: 60, h: 60, type: 'click', placeholderId: '_360_interactive' }); </SCRIPT>
   			</DIV><IMG style="margin: 0px auto; display: block;" alt="" src="Easylogging++源码分析_files/201608021757063065.png"></LI><!-- 宽屏更多按钮 -->
  		 
  <LI class="widescreen-more"><A title="快问" class="btn-comments chat-ask-button low-height hover-box" 
  href="https://blog.csdn.net/woshichenweixian/article/details/77461352#chatqa"><svg 
  xmlns="http://www.w3.org/2000/svg" class="icon hover-hide" 
  aria-hidden="true"><use xmlns:xlink="http://www.w3.org/1999/xlink" 
  xlink:href="#csdnc-more" />				 </svg>				 <SPAN 
  class="hover-show text">更多</SPAN>							 </A>
  <UL class="widescreen-more-box">
    <LI class="widescreen-more"><A title="Easylogging的封装使用二" class="btn-comments low-height hover-box" 
    href="https://blog.csdn.net/woshichenweixian/article/details/77413021"><svg 
    xmlns="http://www.w3.org/2000/svg" class="icon hover-hide" 
    aria-hidden="true"><use xmlns:xlink="http://www.w3.org/1999/xlink" 
    xlink:href="#csdnc-shangyiye" />							 </svg>							 <SPAN class="hover-show text text3">上一篇</SPAN>
    						 </A></LI>
    <LI class="widescreen-more"><A title="Windows的消息队列与消息循环" class="btn-comments hover-box low-height" 
    href="https://blog.csdn.net/woshichenweixian/article/details/77726963"><svg 
    xmlns="http://www.w3.org/2000/svg" class="icon hover-hide" 
    aria-hidden="true"><use xmlns:xlink="http://www.w3.org/1999/xlink" 
    xlink:href="#csdnc-xiayiye" />						 </svg>						 <SPAN class="hover-show text text3">下一篇</SPAN>
    					 </A></LI></UL></LI></UL></DIV>
<SCRIPT>window._bd_share_config = { "common": { "bdSnsKey": {}, "bdText": "", "bdMini": "1", "bdMiniList": false, "bdPic": "", "bdStyle": "0", "bdSize": "16" }, "share": {} }; with (document) 0[(getElementsByTagName('head')[0] || body).appendChild(createElement('script')).src = 'https://csdnimg.cn/static/api/js/share.js?v=89860594'];</SCRIPT>
 
<SCRIPT>
    var recommendCount = 10;
    recommendCount = recommendCount > 1 ? (recommendCount + (recommendCount>6 ? 2 : 1)) : recommendCount;
    var articleTit = "Easylogging++源码分析";
    var ChannelId = 0;
    var articleId = "77461352";
    var commentscount = 0;
    var islock = false;
    var curentUrl = "https://blog.csdn.net/woshichenweixian/article/details/77461352";
    var myUrl = "https://my.csdn.net/";
    //1禁止评论，2正常
    var commentAuth = 2;
    //百度搜索
    var baiduKey = "";
    var needInsertBaidu = true;
    // 代码段样式
    var codeStyle = '';
    var highlight = ["easylogging++","\u6e90\u7801\u5206\u6790"];//高亮数组
</SCRIPT>
 
<SCRIPT src="Easylogging++源码分析_files/sandalstrap.min.js"></SCRIPT>
 
<SCRIPT src="Easylogging++源码分析_files/paging.js"></SCRIPT>
 
<SCRIPT src="Easylogging++源码分析_files/goTop-v1.0.min.js"></SCRIPT>
 
<SCRIPT>
    GoTop({
        right: 8,
        hasReport: true,
        reportFun: function() {
            showReport(false,"Easylogging++源码分析");
        }
    })
</SCRIPT>
 
<SCRIPT src="Easylogging++源码分析_files/common-ffcd47990c.min.js"></SCRIPT>
 
<SCRIPT src="Easylogging++源码分析_files/detail-7060b66935.min.js"></SCRIPT>
 
<SCRIPT src="Easylogging++源码分析_files/skin3-template-9376486353.min.js"></SCRIPT>
	 <LINK href="Easylogging++源码分析_files/chart.css" rel="stylesheet">	 
<SCRIPT src="Easylogging++源码分析_files/chart.min.js" type="text/javascript"></SCRIPT>
	 
<SCRIPT src="Easylogging++源码分析_files/widget2chart.js" type="text/javascript"></SCRIPT>
	 <LINK href="Easylogging++源码分析_files/atom-one-dark.css" rel="stylesheet">	 
<SCRIPT src="Easylogging++源码分析_files/pc_wap_common-676a063698.js" type="text/javascript"></SCRIPT>
	 
<SCRIPT type="text/javascript">
	$(function(){
		var allEscRegex = /&(lt|gt|amp|quot|nbsp|shy|#\d{1,5});/g,
		    namedEntities = {
					lt: '<',
					gt: '>',
					amp: '&',
					quot: '"',
					nbsp: '\u00a0',
					shy: '\u00ad'
				}
		var allEscDecode = function( match, code ) {
				return namedEntities[ code ];
		};
		htmlDecodeAttr = function( text ) {
				return text.replace( allEscRegex, allEscDecode );
		}
	  hljs.initHighlightingOnLoad();
	  hljs.initCopyButtonOnLoad();
	  hljs.initLineNumbersOnLoad();
		if($('pre .language-plain').length>0){
			$('pre .language-plain').each(function(i,e){
				var highlightRe = hljs.highlightAuto(htmlDecodeAttr(e.innerHTML))
				e.innerHTML = highlightRe.value;
				e.className = 'language-'+highlightRe.language;
			});
		}
	})
	</SCRIPT>
 
<SCRIPT src="Easylogging++源码分析_files/MathJax.js" type="text/javascript"></SCRIPT>
 
<SCRIPT type="text/x-mathjax-config">
    MathJax.Hub.Config({
            "HTML-CSS": {
                    linebreaks: { automatic: true, width: "94%container" },
                    imageFont: null
            },
            tex2jax: {
                preview: "none"
            },
            mml2jax: {
                preview: 'none'
            }
    });
</SCRIPT>
 </BODY><!-- 第四范式SDK --><!-- 高亮未与 markdown兼容  --></HTML>
